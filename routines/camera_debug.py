
import cv2
import time

def find_working_camera():
    print("üîç –ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω–æ–π –∫–∞–º–µ—Ä—ã...")
    for i in range(32):
        cap = cv2.VideoCapture(i)
        if cap is not None and cap.isOpened():
            ret, frame = cap.read()
            if ret:
                print(f"‚úÖ –ö–∞–º–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω–∞: /dev/video{i}")
                cap.release()
                return i
            cap.release()
    print("‚ùå –ö–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    return None

def show_camera(index):
    cap = cv2.VideoCapture(index)
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
    print("üìπ –ü–æ–∫–∞–∑ –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫–∞. –ù–∞–∂–º–∏—Ç–µ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞.")

    while True:
        ret, frame = cap.read()
        if not ret:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–¥—Ä.")
            break
        cv2.imshow("Live Camera", frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    index = find_working_camera()
    if index is not None:
        show_camera(index)
