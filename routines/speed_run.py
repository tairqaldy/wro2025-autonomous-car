# speed_run.py

from drive.motors import drive_forward, stop_all, steering_motor
from sensors.color_line import check_turn_color
from sensors.ultrasonic import ultrasonic_sensor
from drive.turns import turn_left, turn_right
from config import DEFAULT_SPEED, TARGET_DISTANCE_MM, TOLERANCE_MM, TURN_ANGLE
from time import sleep

TOTAL_TURNS = 12
turn_counter = 0
first_turn_completed = False

def fast_speed_run():
    global turn_counter, first_turn_completed
    print("üö¶ –ù–∞—á–∏–Ω–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ...")

    while turn_counter < TOTAL_TURNS:

        if not first_turn_completed:
            turn_direction = check_turn_color()
            if turn_direction == "left":
                print("–ü–µ—Ä–≤—ã–π –ø–æ–≤–æ—Ä–æ—Ç –≤–ª–µ–≤–æ")
                turn_left()
                first_turn_completed = True
                turn_counter += 1
                continue
            elif turn_direction == "right":
                print("–ü–µ—Ä–≤—ã–π –ø–æ–≤–æ—Ä–æ—Ç –≤–ø—Ä–∞–≤–æ")
                turn_right()
                first_turn_completed = True
                turn_counter += 1
                continue
            else:
                drive_forward(speed=DEFAULT_SPEED)
                sleep(0.05)
                continue

        # –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–≤–æ—Ä–æ—Ç–∞ ‚Äî –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–µ–Ω—ã –∏ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø–æ–≤–æ—Ä–æ—Ç–æ–≤
        result = check_turn_color()
        if result == "left":
            print("‚Ü™Ô∏è –ü–æ–≤–æ—Ä–æ—Ç –≤–ª–µ–≤–æ")
            turn_left()
            turn_counter += 1
            continue
        elif result == "right":
            print("‚Ü©Ô∏è –ü–æ–≤–æ—Ä–æ—Ç –≤–ø—Ä–∞–≤–æ")
            turn_right()
            turn_counter += 1
            continue

        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –ø—Ä–∞–≤–æ–π —Å—Ç–µ–Ω–µ
        distance = ultrasonic_sensor.get_distance()
        if distance == -1:
            # –î–∞—Ç—á–∏–∫ –Ω–µ –≤–∏–¥–∏—Ç ‚Äî –µ–¥–µ–º –ø—Ä—è–º–æ
            drive_forward(speed=DEFAULT_SPEED)
        elif distance > TARGET_DISTANCE_MM + TOLERANCE_MM:
            steering_motor.run_for_degrees(-5, 30)
            drive_forward(speed=DEFAULT_SPEED)
        elif distance < TARGET_DISTANCE_MM - TOLERANCE_MM:
            steering_motor.run_for_degrees(5, 30)
            drive_forward(speed=DEFAULT_SPEED)
        else:
            steering_motor.run_to_position(0)
            drive_forward(speed=DEFAULT_SPEED)

        sleep(0.05)

    print("‚úÖ –¢—Ä–∞—Å—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    stop_all()
    input("üîö –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n")
    stop_all()

if __name__ == "__main__":
    fast_speed_run()
