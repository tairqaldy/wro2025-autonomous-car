# speed_run.py
# Simplified version: just drive forward and count laps

from drive.motors import drive_forward, stop_all, steering_motor
from config import DEFAULT_SPEED, TURNS_PER_LAP, TOTAL_LAPS, WALL_CORRECTION_DELAY
import time

lap_counter = 0
turn_counter = 0

def fast_speed_run():
    """
    Simple autonomous loop for speed run. Drives forward and counts laps.
    """
    global lap_counter, turn_counter

    print("üö¶ –ù–∞—á–∏–Ω–∞–µ–º —É–ø—Ä–æ—â—ë–Ω–Ω—ã–π —Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –∑–∞–µ–∑–¥ (—Ç–æ–ª—å–∫–æ –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ –∫—Ä—É–≥–∞–º)...")

    try:
        while lap_counter < TOTAL_LAPS:
            # –ü—Ä–æ—Å—Ç–æ –µ–¥–µ–º –ø—Ä—è–º–æ –∏ —Å–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–≤–æ—Ä–æ—Ç—ã —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
            drive_forward(speed=DEFAULT_SPEED)
            time.sleep(2)  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ–∂–¥—É –ø–æ–≤–æ—Ä–æ—Ç–∞–º–∏/—Å–µ–∫—Ç–æ—Ä–∞–º–∏ —Ç—Ä–∞—Å—Å—ã (–ø–æ–¥–±–µ—Ä–∏ –≤—Ä—É—á–Ω—É—é)

            turn_counter += 1
            print(f"üîÅ –ü–æ–≤–æ—Ä–æ—Ç #{turn_counter}")

            if turn_counter >= TURNS_PER_LAP:
                lap_counter += 1
                turn_counter = 0
                print(f"üèÅ –ö—Ä—É–≥ {lap_counter} –∑–∞–≤–µ—Ä—à—ë–Ω")

        print("‚úÖ –í—Å–µ –∫—Ä—É–≥–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

    except KeyboardInterrupt:
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    finally:
        stop_all()
        steering_motor.run_to_position(0)
        print("üèÅ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

if __name__ == "__main__":
    fast_speed_run()
